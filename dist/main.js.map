{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bird.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/level.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAA0B;AACE;;AAEb;AACf;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,6CAAI;AACxB,qBAAqB,8CAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAgC;;AAEhC;AACA,IAAI,6CAAU,S;;;;;;;;;;;;ACHd;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B,KAAK;AACL;AACA;AACA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const CONSTANTS = {\n  GRAVITY:  0.4,\n  FLAP_SPEED:  8,\n  TERMINAL_VEL:  12,\n  BIRD_WIDTH:  40,\n  BIRD_HEIGHT:  30\n};\n\nexport default class Bird {\n\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = this.dimensions.width / 3;\n    this.y = this.dimensions.height / 2;\n    this.vel = 0;\n  }\n\n  flap() {\n    this.vel = -1 * CONSTANTS.FLAP_SPEED;\n  }\n\n  moveBird() {\n    this.y += this.vel;\n    this.vel += CONSTANTS.GRAVITY;\n    if (Math.abs(this.vel) > CONSTANTS.TERMINAL_VEL) {\n      if (this.vel > 0) {\n        this.vel = CONSTANTS.TERMINAL_VEL;\n      } else {\n        this.vel = CONSTANTS.TERMINAL_VEL * -1;\n      }\n    }\n  }\n  tick(ctx) {\n    this.moveBird();\n\n    ctx.fillStyle = \"yellow\";\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, CONSTANTS.BIRD_WIDTH, CONSTANTS.BIRD_HEIGHT);\n    ctx.fill();\n  }\n\n  bounds() {\n    return {\n      x1: this.x,\n      x2: this.x + CONSTANTS.BIRD_WIDTH,\n      y1: this.y,\n      y2: this.y + CONSTANTS.BIRD_HEIGHT\n    };\n  }\n\n  outOfBounds() {\n    const aboveTheTop = this.y < 0;\n    const belowTheBottom = this.y + CONSTANTS.BIRD_HEIGHT > this.dimensions.height;\n    return aboveTheTop || belowTheBottom;\n  }\n}\n","import Bird from \"./bird\";\nimport Level from \"./level\";\n\nexport default class FlappyBird {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.dimensions = { width: canvas.width, height: canvas.height };\n    this.registerEvents();\n    this.restart();\n  }\n\n  play() {\n    this.running = true;\n    this.tick();\n  }\n\n  restart() {\n    this.running = false;\n    this.score = 0;\n    this.bird = new Bird(this.dimensions);\n    this.level = new Level(this.dimensions);\n\n    this.tick();\n  }\n\n  registerEvents() {\n    this.boundClickHandler = this.click.bind(this);\n    this.ctx.canvas.addEventListener(\"mousedown\", this.boundClickHandler);\n  }\n\n  click(e) {\n    if (this.running) {\n      this.bird.flap();\n    } else {\n      this.play();\n      this.bird.flap();\n    }\n  }\n\n  gameOver() {\n    return (\n      this.level.collidesWith(this.bird.bounds()) || this.bird.outOfBounds(this.height)\n    );\n  }\n\n  tick() {\n    this.level.tick(this.ctx);\n    this.bird.tick(this.ctx);\n    if (this.gameOver()) {\n      alert(this.score);\n      this.restart();\n    }\n    this.level.passedPipe(this.bird.bounds(), () => {\n      this.score += 1;\n      console.log(this.score);\n    });\n    this.drawScore();\n\n    if (this.running) {\n      requestAnimationFrame(this.tick.bind(this));\n    }\n  }\n\n  drawScore() {\n    this.ctx.font = \"bold 50pt serif\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(this.score, this.width / 2, this.height / 4);\n    this.ctx.strokeStyle = \"black\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeText(this.score, this.width / 2, this.height / 4);\n  }\n}\n","import FlappyBird from './game';\n\nconst canvas = document.getElementById('bird-game');\nnew FlappyBird(canvas);","const CONSTANTS = {\n  PIPE_SPEED: 2,\n  GAP_WIDTH: 150,\n  PIPE_WIDTH: 50,\n  EDGE_BUFFER: 50,\n  PIPE_GAP_WIDTH: 220,\n  WARM_UP_SECONDS: 2\n};\n\nexport default class Level {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    \n    const secondsTillFirstPipe = 1;\n    const firstPipeDistance = \n      this.dimensions.width + \n      (secondsTillFirstPipe * 60 * CONSTANTS.PIPE_SPEED);\n\n    this.pipes = [\n      this.randomPipe(firstPipeDistance),\n      this.randomPipe(firstPipeDistance + CONSTANTS.PIPE_GAP_WIDTH),\n      this.randomPipe(firstPipeDistance + (CONSTANTS.PIPE_GAP_WIDTH * 2)),\n    ];\n  }\n\n  randomPipe(x) {\n    const heightRange = this.dimensions.height - (2 * CONSTANTS.EDGE_BUFFER) - CONSTANTS.GAP_WIDTH;\n    const gapTop = (Math.random() * heightRange) + CONSTANTS.EDGE_BUFFER;\n    return {x: x, gapTop: gapTop, passed: false};\n  }\n\n  tick(ctx) {\n    this.drawBackground(ctx);\n    this.movePipes();\n    this.drawPipes(ctx);\n  }\n\n  drawBackground(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = \"skyblue\";\n    ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n  }\n\n  passedPipe(bird, callback) {\n    this.eachPipe((pipe) => {\n      if (pipe.x + CONSTANTS.PIPE_WIDTH < bird.x1) {\n        if (!pipe.passed) {\n          pipe.passed = true;\n          callback();\n        }\n      }\n    });\n  }\n\n  movePipes() {\n    this.eachPipe(function(pipe) {\n      pipe.x -= CONSTANTS.PIPE_SPEED;\n    });\n\n    //if a pipe has left the screen add a new one to the end\n    if (this.pipes[0].x <= -CONSTANTS.PIPE_WIDTH) {\n      this.pipes.shift();\n      const newX = this.pipes[1].x + CONSTANTS.PIPE_GAP_WIDTH;\n      this.pipes.push(this.randomPipe(newX));\n    }\n  }\n\n  drawPipes(ctx) {\n    this.eachPipe(function(pipe) {\n      ctx.fillStyle = \"green\";\n      ctx.beginPath();\n      ctx.rect(pipe.x, 0, CONSTANTS.PIPE_WIDTH, pipe.gapTop);\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.rect(\n        pipe.x,\n        pipe.gapTop + CONSTANTS.GAP_WIDTH,\n        CONSTANTS.PIPE_WIDTH,\n        ctx.canvas.height - pipe.gapTop\n      );\n      ctx.fill();\n    });\n  }\n\n  eachPipe(callback) {\n    this.pipes.forEach(callback.bind(this));\n  }\n  collidesWith(bird) {\n    var _pipeBounds = (pipe) => {\n      var topPipe = {\n        x1: pipe.x,\n        x2: pipe.x + CONSTANTS.PIPE_WIDTH,\n        y1: 0,\n        y2: pipe.gapTop\n      };\n\n      var bottomPipe = {\n        x1: pipe.x,\n        x2: pipe.x + CONSTANTS.PIPE_WIDTH,\n        y1: CONSTANTS.GAP_WIDTH + pipe.gapTop,\n        y2: this.dimensions.height\n      };\n      return { topPipe: topPipe, bottomPipe: bottomPipe };\n    };\n    var _overlap = (rect1, rect2) => {\n      if (rect1.x1 > rect2.x2 || rect1.x2 < rect2.x1) {\n        return false;\n      }\n      if (rect1.y1 > rect2.y2 || rect1.y2 < rect2.y1) {\n        return false;\n      }\n      return true;\n    };\n    let collision = false;\n    this.eachPipe((pipe) => {\n      let pipeBounds = _pipeBounds(pipe);\n      if ( \n        _overlap(pipeBounds.topPipe, bird) || \n        _overlap(pipeBounds.bottomPipe, bird)\n      ) { collision = true; }\n    });\n    return collision;\n  }\n}\n"],"sourceRoot":""}